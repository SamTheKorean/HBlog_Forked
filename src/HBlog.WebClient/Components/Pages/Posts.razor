@page "/posts"
@using HBlog.Domain.Entities
@using HBlog.WebClient.Services
@using HBlog.WebClient.States
@inject ICategoryService categoryService
@inject IPostService postService;
@inject ITagService tagService;
@inject PostDashboardState PostDashboardState;
<div class="container-xxl py-2 d-flex">
    <!-- Left Sidebar -->
    <aside class="left-banner">
        <div class="category-section">
            <label for="categorySelect">Category</label>
            <InputSelect id="categorySelect" class="form-control"
                         TValue="int?"
                         Value="selectCategoryId"
                         ValueChanged="value => HandleChangeCategory(value)"
                         ValueExpression="@(() => selectCategoryId)">
                <option value="0">Select All</option>
                @foreach (var category in Categories)
                {
                    <option value="@category.Id">@category.Title</option>
                }
            </InputSelect>
        </div>
        <div class="tag-filters-section">
            <button @onclick="@(() => PostDashboardState.ShowConfigureTagSelectDialog())" class="btn btn-primary">
                Tag Filters
            </button>
        </div>
    </aside>

    <!-- Main Content -->
    <div class="main-content h-100 d-flex flex-column justify-content-center">
        @if (posts is not null)
        {
            <PostList Posts=@posts></PostList>
        }
        else
        {
            <h4>Loading data...</h4>
        }
    </div>

    <!-- Right Sidebar (Search) -->
    <aside class="right-banner">
        <div class="search-section">
            <InputText class="form-control"
                       type="text"
                       id="searchInput"
                       placeholder="Search for posts..."
                       title="Search"
                       @bind-Value="@searchText" />
            <button type="submit"
                    class="btn btn-success"
                    @onclick="SearchSelectedSetup">
                Search
            </button>
        </div>
    </aside>
</div>

<TemplateDialog Show="PostDashboardState.ShowingConfigureDialog">
    <ConfigureTagDialog SearchTags="PostDashboardState.SearchTags"
                        OnCancel="PostDashboardState.CancelConfigureTagDialog"
                        OnConfirm="PostDashboardState.ConfirmConfigureTagDialog" />
</TemplateDialog>
@code {

    private IEnumerable<Category> Categories { get; set; } = new List<Category>();
    private List<TagDto>? tags = new();
    private int? selectCategoryId = 0;
    private IEnumerable<PostDisplayDto> posts;
    private string searchText = "";

    protected override async Task OnInitializedAsync()
    {
        Categories = await categoryService.GetCategories();
        tags = (await tagService.GetTags()).ToList();
        posts = await postService.GetPostDisplays();    
    }

    protected override Task OnParametersSetAsync()
    {
        return base.OnParametersSetAsync();
    }
    protected async Task SearchSelectedSetup(MouseEventArgs e)
    {
        posts = await postService.GetPostDisplayByFilters(selectCategoryId.Value, PostDashboardState.SearchTags);
    }

    private async Task HandleChangeCategory(int? value)
    {
        if (value == 0)
        {
            posts = await postService.GetPostDisplays();
        }
        else
            posts = await postService.GetPostDisplayByFilters((int)value, PostDashboardState.SearchTags);
        selectCategoryId = value;
    }



}
