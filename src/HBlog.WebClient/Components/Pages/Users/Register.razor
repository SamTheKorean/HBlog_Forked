@page "/users/register"
@inject UserClientService userService
@inject NavigationManager navManager
@inject IAuthService authService
@using HBlog.Contract.DTOs
@using HBlog.WebClient.Services
<div class="container-xxl py-4">
    <h3>Register New Account</h3>
    <div class="card-body">
        <EditForm Model="RegisterDtoModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="email">Email Address</label>
                <InputText class="form-control" @bind-Value="RegisterDtoModel.Email" />
                <ValidationMessage For="@(() => RegisterDtoModel.Email)" />
            </div>
            <div class="form-group">
                <label for="email">UserName</label>
                <InputText class="form-control" @bind-Value="RegisterDtoModel.UserName" />
                <ValidationMessage For="@(() => RegisterDtoModel.UserName)" />
            </div>

            <div class="form-group">
                <label for="text">First Name</label>
                <InputText class="form-control" @bind-Value="RegisterDtoModel.FirstName" />
                <ValidationMessage For="@(() => RegisterDtoModel.FirstName)" />
            </div>
            <div class="form-group">
                <label for="text">Last Name</label>
                <InputText class="form-control" @bind-Value="RegisterDtoModel.LastName" />
                <ValidationMessage For="@(() => RegisterDtoModel.LastName)" />
            </div>

            <div class="form-group">
                <label for="text">Password</label>
                <InputText class="form-control" type="password" @bind-Value="RegisterDtoModel.Password" />
                <ValidationMessage For="@(() => RegisterDtoModel.Password)" />
            </div>

            @if(errorMessages.Count > 0)
            {
                foreach(var msg in errorMessages)
                {
                    <p>@msg</p>
                }
            }
            <button type="submit" class="btn btn-primary btn-block">Register</button>
        </EditForm>
    </div>
</div>



@code {
    RegisterDto RegisterDtoModel = new RegisterDto();
    List<string> errorMessages = new();
    private async Task HandleRegistration()
    {
        var result = await userService.RegisterNewUser(RegisterDtoModel);
        if (result.Item1)
        {
            errorMessages = new();
            await authService.AuthenAsync(new LoginDto { UserName = RegisterDtoModel.UserName, Password = RegisterDtoModel.Password });
            navManager.NavigateTo("/");
        }
        if(result.Item2 != null)
        {
            errorMessages = result.Item2.Select(t => t.Description).ToList();
        }
    }
}
