@page "/posts/edit/{PostId:int?}"
@using KevBlog.Domain.Entities
@using KevBlog.WebClient.Services
@using Microsoft.AspNetCore.Authorization
@inject IPostService postService
@inject ICategoryService categoryService
@inject ITagService tagService
@inject NavigationManager navManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]
<div class="container-xxl py-5">
    <h3>Edit Post</h3>
    <div class="card-body">
        <EditForm Model="postView" OnValidSubmit="UpdatePost">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="title">Post Title</label>
                <InputText class="form-control" @bind-Value="postView.Title" />
            </div>
            <div class="form-group">
                <label for="description">Description</label>
                <InputText class="form-control" @bind-Value="postView.Desc" />
            </div>

            <div class="form-group">
                <label for="description">Category</label>
                <InputSelect class="select-element" @bind-Value="postView.CategoryId">
                    @foreach (var category in Categories)
                    {
                        <option value="@category.Id">@category.Title</option>
                    }
                </InputSelect>
            </div>
            <div class="form-group">
                <label for="Content">Content</label>
                <InputTextArea class="form-control" @bind-Value="postView.Content" />
            </div>
            <br />
            <div class="form-group">
                <label for="type">Tags</label>  
                <InputSelect class="select-element" @bind-Value="postView.Tags">
                    @foreach (var category in Categories)
                    {
                        <option value="@category.Id">@category.Title</option>
                    }
                </InputSelect>
                <br />
                <div>
                    @if (postView.Tags is not null)
                    {
                        @foreach (var tag in postView.Tags)
                        {
                            <button>@tag.Name</button>
                        }
                    }
                </div>

            </div>
            <br />
            <br />
            <div class="form-group">
                <label for="Content">Visible to public</label>
                <InputCheckbox  @bind-Value="isVisible"/>
            </div>
            <br />
            <button type="submit" class="btn btn-primary btn-block">Update</button>
        </EditForm>
    </div>
</div>

@code {
    public PostDisplayDetailsDto postView { get; set; } = new();

    [Parameter]
    public int? PostId { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> AuthState { get; set; }

    private bool isVisible { get; set; }
    // private string categoryName { get; set; }
    private IEnumerable<Category> Categories { get; set; } = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        postView = await postService.GetPostDetails(PostId.Value);
        Categories = await categoryService.GetCategories();
        tagService = await tagService.GetTags();
        // var categoryName = categories.Where(x => x.Id == postView.CategoryId);
    }

    private async Task UpdatePost()
    {
        var authState = await AuthState;
        if (authState.User.Identity.IsAuthenticated)
        {
            PostUpdateDto postUpdateDto = new PostUpdateDto
                {
                    Id = postView.Id,
                    Title = postView.Title,
                    Desc = postView.Desc,
                    Content = postView.Content,
                    Type = postView.Type,
                    LinkForPost = postView.LinkForPost ?? string.Empty,
                };
            var result = await postService.UpdatePost(postUpdateDto);
            if (result)
                navManager.NavigateTo($"/posts/{postUpdateDto.Id}");
        }

    }
    private async Task AddTagInPost()
    {
    }
}
